#ifndef QUEUE_H
#define QUEUE_H

#include <atomic>
#include "../config.hpp"
#include "entry.hpp"
#include "tracker.hpp"

class qEntry : public Entry, public Trackable{
public:
	qEntry();
	writeset* wset_p;
	freeset* fset_p;
	std::atomic<qEntry*> next;
	uint64_t get_birth();

	~qEntry();
};

class queue_t{
public:
	queue_t();
	void enqueue(qEntry *foo);
	qEntry * dequeue();
	qEntry * dequeue_until(unsigned long until_ts, unsigned long& cnt_ui);
	std::atomic<qEntry*> head;
	std::atomic<qEntry*> complete;
	std::atomic<qEntry*> tail;
	std::atomic<bool> writelock;
};

#endif
